stages:
  - lint
  - plan
  - apply
  - destroy

image: 
  name: hashicorp/terraform:light
  entrypoint: [""]

variables: &common_vars
  TF_ADDRESS: "https://gitlab.com/api/v4/projects/${PROJECT_ID}/terraform/state/teach-challenge-state"
  backend_config: >
    -backend-config=address=$TF_ADDRESS 
    -backend-config=lock_address=$TF_ADDRESS/lock 
    -backend-config=unlock_address=$TF_ADDRESS/lock 
    -backend-config=username=${TF_USERNAME} 
    -backend-config=password=${TF_PASSWORD} 
    -backend-config=lock_method=POST 
    -backend-config=unlock_method=DELETE 
    -backend-config=retry_wait_min=5

base:
  stage: lint
  variables:
    userdata_file_path: "${CI_PROJECT_DIR}/tf_templates/compute/userdata/conf.toml"
    tfvars_file_path: "${CI_PROJECT_DIR}/tf_templates/terraform.tfvars"
  before_script:
    - sed -i 's/region.*/region = "us-east-1"'${AWS_REGION}'"/g' $tfvars_file_path
    - |
      if [[ -z ${DB_SECRET_NAME} ]]; then 
      sed -i 's/db_secret_name.*/db_secret_name = "db/tech_challenge_secret"/g' $tfvars_file_path 
      else
      sed -i 's/db_secret_name.*/db_secret_name = "'${DB_SECRET_NAME}'"/g' $tfvars_file_path 
      fi
    - cd ${CI_PROJECT_DIR}/tf_templates && terraform fmt -recursive  
    - cat ${CI_PROJECT_DIR}/tf_templates/terraform.tfvars
    - cat $userdata_file_path
    - sed -i 's/export AWS_DEFAULT_REGION=.*/export AWS_DEFAULT_REGION='${AWS_REGION}'/g' $userdata_file_path


# Add hiddenjob to set secret, region

# validate:
#   stage: lint
#   variables:
#     <<: *common_vars
#   before_script:
#     - mkdir app && cd app
#     - wget https://github.com/servian/TechChallengeApp/releases/download/v.0.10.0/TechChallengeApp_v.0.10.0_linux64.zip
#     - unzip TechChallengeApp_v.0.10.0_linux64.zip -d ./
#   script:
#     - terraform --version
#     - cd ${CI_PROJECT_DIR}/tf_templates
#     - echo $backend_config
#     - terraform init $backend_config
#     - terraform validate

# plan:
#   stage: plan
#   variables:
#     <<: *common_vars
#   script:
#     - cd ${CI_PROJECT_DIR}/tf_templates
#     - terraform init $backend_config
#     - terraform plan

# apply:
#   stage: apply
#   when: manual
#   variables:
#     <<: *common_vars    
#   script:
#     - cd ${CI_PROJECT_DIR}/tf_templates
#     - terraform init $backend_config
#     - terraform apply -auto-approve

# destroy:
#   stage: destroy
#   when: manual
#   variables:
#     <<: *common_vars
#   script:
#     - cd ${CI_PROJECT_DIR}/tf_templates
#     - terraform init $backend_config
#     - terraform destroy -auto-approve
